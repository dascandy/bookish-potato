#pragma once

namespace s2 {
  class string_view {
  public:
    template <size_t N>
    string_view(const char (&arr)[N])
    : begin_(arr)
    , end_(arr + N)
    {}
    string_view(const string_view& rhs)
    : begin_(rhs.begin_)
    , end_(rhs.end_)
    {}
    string_view(const char* begin, const char* end = nullptr)
    : begin_(begin)
    , end_(end)
    {
      if (!end_) {
        end_ = begin_;
        while (*end_) end_++;
      }
    }
    const char* begin() { return begin_; }
    const char* end() { return end_; }
    const char* data() { return begin_; }
    bool empty() { return begin_ == end_; }
    size_t size() { return end_ - begin_; }
    char operator[](size_t offset) { return begin_[offset]; }
  private:
    const char* begin_, *end_;
  };
}


